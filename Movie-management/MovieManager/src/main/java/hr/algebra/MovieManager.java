/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hr.algebra;

import com.formdev.flatlaf.themes.FlatMacDarkLaf;
import hr.algebra.appPreference.AppPreference;
import hr.algebra.dal.UserRepository;
import hr.algebra.dal.sql.UserRepositorySql;
import hr.algebra.model.Role;
import hr.algebra.model.User;
import hr.algebra.utilities.MessageUtils;
import hr.algebra.view.EditActorsPanel;
import hr.algebra.view.EditDirectorsPanel;
import hr.algebra.view.EditGenrePanel;
import hr.algebra.view.EditMoviesPanel;
import hr.algebra.view.LoginForm;
import hr.algebra.view.UploadMoviesPanel;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author daniel.bele
 */
public class MovieManager extends javax.swing.JFrame {

    /**
     * Creates new form ArticleManager
     */
    public MovieManager(User user) {
        initComponents();
        
        try {
            MovieManager.user = user;
            initPanels();
            
            this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
            this.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent e) {
                    if (MessageUtils.showConfirmDialog("Exit", "Do you really want to exit app?")) {
                        dispose();
                        System.exit(0);
                }
            }
        });
        } catch (Exception ex) {
             Logger.getLogger(MovieManager.class.getName()).log(Level.SEVERE, null, ex);
             MessageUtils.showErrorMessage("Error", "Unable to load main form, closing..");
             System.exit(1);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tpContent = new javax.swing.JTabbedPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuOptions = new javax.swing.JMenu();
        miLogOut = new javax.swing.JMenuItem();
        miExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Movies");

        menuOptions.setMnemonic('O');
        menuOptions.setText("Options");

        miLogOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miLogOut.setText("Log out");
        miLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miLogOutActionPerformed(evt);
            }
        });
        menuOptions.add(miLogOut);

        miExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        miExit.setText("Exit");
        miExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                miExitActionPerformed(evt);
            }
        });
        menuOptions.add(miExit);

        jMenuBar1.add(menuOptions);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpContent, javax.swing.GroupLayout.DEFAULT_SIZE, 1200, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tpContent, javax.swing.GroupLayout.DEFAULT_SIZE, 757, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void miLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miLogOutActionPerformed
        try {
            if (MessageUtils.showConfirmDialog(
                    "Log out", 
                    "Do you really want to log out?")) {
                    AppPreference.clearLoggedInUser();
                    dispose();
                    new LoginForm().setVisible(true);
            }
        } catch (Exception ex) {
            Logger.getLogger(MovieManager.class.getName()).log(Level.SEVERE,null,ex);
            MessageUtils.showErrorMessage("Error", "Can not open form, exiting...");
            System.exit(1);
        }
    }//GEN-LAST:event_miLogOutActionPerformed

    private void miExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_miExitActionPerformed
        if (MessageUtils.showConfirmDialog(
                "Exit", 
                "Do you really want to exit app?")) {
                dispose();
        }
    }//GEN-LAST:event_miExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(new FlatMacDarkLaf());
        } catch (UnsupportedLookAndFeelException e ) {
            e.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
           try {
            String loggedInUsername = AppPreference.getLoggedInUser();

            if (loggedInUsername != null) {
                UserRepository userRepository = new UserRepositorySql();
                Optional<User> userOpt = userRepository
                        .selectUsers()
                        .stream()
                        .filter(u -> u.getUsername().equals(loggedInUsername))
                        .findFirst();

                if (userOpt.isPresent()) {
                    new MovieManager(userOpt.get()).setVisible(true);
                } else {
                    new LoginForm().setVisible(true);
                }
            } else {
                new LoginForm().setVisible(true);
            }
        } catch (Exception e) {
            e.printStackTrace();
            MessageUtils.showErrorMessage("Error", "Unable to start application.");
            System.exit(1);
        }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu menuOptions;
    private javax.swing.JMenuItem miExit;
    private javax.swing.JMenuItem miLogOut;
    private javax.swing.JTabbedPane tpContent;
    // End of variables declaration//GEN-END:variables

    private void initPanels() {
        
        if (user.getRole() == Role.ADMIN) {
           tpContent.add(UPLOAD__MOVIES, new UploadMoviesPanel());
           tpContent.add(EDIT_MOVIES, new EditMoviesPanel());
           tpContent.add(EDIT_ACTORS, new EditActorsPanel());
           tpContent.add(EDIT_DIRECTORS, new EditDirectorsPanel());
           tpContent.add(EDIT_GENRES, new EditGenrePanel());
        } else if (user.getRole() == Role.USER) {
           tpContent.add(EDIT_MOVIES, new EditMoviesPanel());
        }
              
    }
    private static User user;
    private static final String UPLOAD__MOVIES = "Upload Movies";
    private static final String EDIT_MOVIES = "Edit Movies";
    private static final String EDIT_ACTORS = "Edit Actors";
    private static final String EDIT_DIRECTORS = "Edit Directors";
    private static final String EDIT_GENRES = "Edit Genres";
}
